package cn.gov.hrss.ln.stuenroll.db.mariadb;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;

import cn.gov.hrss.ln.stuenroll.db.I_UserInfoDao;

public class UserInfoDao implements I_UserInfoDao {

	@Override
	public List<Record> searchUserInfo(HashMap map, long start, long length) {
		ArrayList param = new ArrayList();

		String username = (String) map.get("username");
		String name = (String) map.get("name");
		Long organizationId = (Long) map.get("organizationId");
		Long roleId = (Long) map.get("roleId");
		String tel = (String) map.get("tel");
		String email = (String) map.get("email");

		StringBuffer sql = new StringBuffer();
		sql.append("SELECT ");
		sql.append("	u.id, ");
		sql.append("	u.`username`, ");
		sql.append("	u.`name`, ");
		sql.append("	IFNULL(o.`name`, '') AS organization, ");
		sql.append("	IFNULL(r.`name`, '') AS role, ");
		sql.append("	u.tel, ");
		sql.append("	u.email ");
		sql.append("FROM ");
		sql.append("	USER u ");
		sql.append("LEFT JOIN organization o ON u.organization_id = o.id ");
		sql.append("LEFT JOIN role r ON u.role_id = r.id ");
		sql.append("WHERE ");
		sql.append("	1 = 1 ");
		if (username != null && username.length() > 0) {
			sql.append(" AND u.username = ? ");
			param.add(username);
		}
		if (name != null && name.length() > 0) {
			sql.append(" AND u.name = ? ");
			param.add(name);
		}
		if (organizationId != null) {
			sql.append(" AND u.organization_id = ? ");
			param.add(organizationId);
		}
		if (roleId != null) {
			sql.append(" AND u.role_id = ? ");
			param.add(roleId);
		}
		if (email != null) {
			sql.append(" AND u.email = ? ");
			param.add(email);
		}
		sql.append("ORDER BY u.id ");
		sql.append("LIMIT ?, ? ");
		param.add(start);
		param.add(length);

		List<Record> list = Db.find(sql.toString(), param.toArray());
		for (Record record : list) {

			record.set("id", record.getLong("id").toString());
		}
		return list;
	}

	@Override
	public int deleteUserInfo(Long[] id) {
		StringBuffer sql = new StringBuffer();
		sql.append("DELETE ");
		sql.append("FROM ");
		sql.append("	`user` ");
		sql.append("WHERE ");
		sql.append("	id IN ( ");
		for (int i = 0; i < id.length; i++) {
			sql.append("?");
			if (i != id.length - 1) {
				sql.append(",");
			}
		}
		sql.append(") ");
		int i = Db.update(sql.toString(), id);
		return i;
	}

}
