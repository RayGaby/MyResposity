package cn.gov.hrss.ln.stuenroll.db;

import java.util.HashMap;
import java.util.List;

import com.jfinal.plugin.activerecord.Record;

/**
 * Enroll表Dao接口
 * 
 * @author YangDi
 *
 */
public interface I_EnrollDao {
	/**
	 * 根据条件查询报名表相关数据总数
	 * 
	 * @param year
	 * @param month
	 * @param stateId
	 * @param organizationId
	 * @return
	 */
	public long searchCountByCondition(Integer year, Integer month, Integer stateId, Long organizationId);

	/**
	 * 根据index查询报名数据
	 * @param map
	 * @param start
	 * @param length
	 * @param index
	 * @return
	 */
	public List<Record> searchEnroll(HashMap map, Long start, Long length,String index);


	/**
	 * 根据index查询数据
	 * @param map
	 * @param index
	 * @return
	 */
	public long searchEnrollCount(HashMap map,String index);

	/**
	 * 根据ID删除数据
	 * 
	 * @param id
	 * @return
	 */
	public int deleteById(Long[] id);

	/**
	 * 根据register_id查询个报名信息(for mobile) 2016年07月01日 15:11:36
	 * 
	 * @param id
	 * @return
	 */
	public Record searchPersonalEnroll(Long registerId, Long pid);

	/**
	 * 根据register_id查询个人进度(for mobile) 2016年07月04日 15:40:32
	 * 
	 * @param id
	 * @return
	 */
	public String searchPersonalState(Long id);

	/**
	 * 是否存在某条记录
	 * 
	 * @param pid
	 * @return
	 */
	public boolean hasRecord(String pid);

	/**
	 * 查询报名记录
	 * 
	 * @param pid
	 * @return
	 */
	public Record searchRegisterRecord(String pid);

	/**
	 * 查询注册用户是否在enroll表中有注册信息
	 * 
	 * @param registerId
	 * @return
	 */
	public boolean checkRegisterIdUnique(Long registerId);

	/**
	 * 确认pid是否已经报名——redis
	 * 
	 * @param registerId
	 * @return
	 */
	public boolean checkPidUnique(String pid);
	/**
	 * 查询当前机构某一专业的人数
	 * 
	 * @param professionId
	 * @param organizationId
	 * @return
	 */
	public long searchCountAtProfession(String profession,Long organizationId);/**
	 * 根据中退
	 * @param id
	 * @return
	 */
	public int quit(Long id,String message);
	/**
	 * 根据ID取消中退
	 * @param id
	 * @return
	 */
	public int unquit(Long[] id);
	/**
	 * 意向地点统计
	 * @param year
	 * @param place
	 * @param organizationId
	 * @return
	 */
	public long PlaceCount(Integer year ,String place , Long organizationId);
	
	/**
	 * 学员学历
	 * @param year
	 * @param edu
	 * @param organizationId
	 * @return
	 */
	public long education(Integer year ,String edu , Long organizationId);
	
	/**
	 * 本届报名最多的专业的人数统计
	 * @param year
	 * @param organizationId
	 * @return
	 */
	public HashMap professionCount(Integer year , Long organizationId);
	
	/**
	 * 本届报名最多的专业的班级统计
	 * @param year
	 * @param organizationId
	 * @return
	 */
	public HashMap professionClassCount(HashMap map1 ,Integer year , Long organizationId);

	/**
	 * 本届报名最多的专业的就业率
	 * @param year
	 * @param organizationId
	 * @return
	 */
	public HashMap getJob(HashMap map1 ,Integer year , Long organizationId);
	
	/**
	 * 获得该年份和月份的报名信息
	 * @param year
	 * @param month
	 * @return
	 */
	public HashMap getApplyInfo(Integer year, Integer month, Long organizationId);
	
	//以下全是enroll表上的功能
	public int divide(Long[] id,Long organizationId,Long professionId,String classinId,String place);
	public int undivided(Long[] id);
	public Record getinfo(Long id);
	public List<Record> getOrganization(Integer year,Long organizationId);
	public List<Record> getProfession(String organizationId,Integer year);
	public List<Record> getPlace(Long organizationId);
	public List<Record> getProfessionClass(Long organizationId,Long professionId,Integer year);
	public long update(HashMap map,String method);
	//over
	/**
	 * 查询某一机构的人数
	 * 
	 * @param professionId
	 * @return
	 */
	public long searchCountAtOrganization(String organization);
}
